{"version":3,"sources":["components/RouteWithCondition.js","components/LoginForm.js","pages/Home.js","components/OtpForm.js.js","pages/CheckOTP.js","API/routes.js","API/index.js","components/NavBar.js","components/Selector.js","logo.svg","components/Loader.js","components/CardsBox.js","utils/paginate.js","components/PaginateBox.js","components/Card.js","pages/Cards.js","utils/validate.js","App.js","entities/User.js","reportWebVitals.js","index.js"],"names":["RouteWithCondition","condition","to","children","rest","render","Login","isValid","useState","login","setLogin","password","setPassword","invalidUser","setInvalidUser","history","useHistory","handleChange","setState","e","target","value","onSubmit","preventDefault","push","className","htmlFor","name","type","id","aria-describedby","required","onChange","propsType","PropTypes","func","isRequired","Home","users","LoginForm","OtpForm","setValue","isValidOTP","setIsValidOTP","CheckOTP","style","height","host","prefix","routes","path","join","setSearchParams","url","obj","Object","entries","forEach","key","searchParams","set","isObjWithKeys","keys","length","getPokemonsData","a","query","route","URL","fetch","response","json","data","headers","get","total","Error","NavBar","isLinkBack","logout","backgroundColor","onClick","goBack","borderStyle","Selector","list","isLoading","setCurrentValue","disabled","map","i","Loader","src","svg","alt","CardsBox","cards","useRouteMatch","console","log","card","imageUrl","pathname","state","artist","paginate","page","pageSize","lastPage","Math","ceil","separator","pages","PaginateBox","setPage","pagesList","aria-label","currentPage","Card","useLocation","imageUrlHiRes","types","subtype","attacks","damage","cost","resistances","JSON","stringify","evolvesFrom","text","defaultQuery","selectors","defaultSelectorsState","reduce","acc","defaultCards","setCurrentPage","setQuery","setSelectorValue","Cards","setTypes","setCards","isLoadingSelectors","setIsLoadingSelectors","isLoadingCards","setIsLoadingCards","useEffect","alert","Number","fetchCardsData","exact","validateUser","setUser","user","find","u","passCheck","validateOtp","otp","otpValue","otpCheck","nickname","pass","this","defaultUser","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"+SAceA,EAXY,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,SAAaC,EAAW,6CACnE,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,WACN,OAAOJ,EAAYE,EAAW,cAAC,IAAD,CAAUD,GAAIA,S,QCJ9CI,EAAQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACHC,mBAAS,IADN,mBACtBC,EADsB,KACfC,EADe,OAEGF,mBAAS,IAFZ,mBAEtBG,EAFsB,KAEZC,EAFY,OAGSJ,oBAAS,GAHlB,mBAGtBK,EAHsB,KAGTC,EAHS,KAKvBC,EAAUC,cAWVC,EAAe,SAACC,GAAD,OAAc,SAACC,GAClCD,EAASC,EAAEC,OAAOC,SAEpB,OACE,uBAAMC,SAba,SAACH,GACpBA,EAAEI,iBACEhB,EAAQE,EAAOE,KACjBG,GAAe,GACfC,EAAQS,KAAK,SAEfV,GAAe,IAOf,UACE,qBAAKW,UAAU,OAAf,SACE,wBAAOC,QAAQ,aAAaD,UAAU,aAAtC,kBAEE,uBACEE,KAAK,QACLC,KAAK,OACLH,UAAU,eACVI,GAAG,aACHC,mBAAiB,YACjBC,UAAQ,EACRV,MAAOZ,EACPuB,SAAUf,EAAaP,UAI7B,qBAAKe,UAAU,OAAf,SACE,wBAAOE,KAAK,WAAWD,QAAQ,gBAAgBD,UAAU,6BAAzD,qBAEE,uBACEE,KAAK,WACLC,KAAK,WACLH,UAAU,eACVI,GAAG,gBACHR,MAAOV,EACPoB,UAAQ,EACRC,SAAUf,EAAaL,UAK7B,wBAAQgB,KAAK,SAASH,UAAU,oCAAhC,qBAGCZ,GAAe,mBAAGY,UAAU,wBAAb,gDAKPnB,IAEfA,EAAM2B,UAAY,CAAE1B,Q,OAAS2B,EAAUC,KAAKC,YC9D5C,IAQeC,EARF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAO/B,EAAc,EAAdA,QACrB,OACE,qBAAKkB,UAAU,mEAAf,SACE,cAACc,EAAD,CAAWD,MAAOA,EAAO/B,QAASA,OCuCzBiC,G,MAzCC,SAAC,GAAiB,IAAfjC,EAAc,EAAdA,QAAc,EACLC,mBAAS,IADJ,mBACxBa,EADwB,KACjBoB,EADiB,OAEKjC,mBAAS,MAFd,mBAExBkC,EAFwB,KAEZC,EAFY,KAGzB5B,EAAUC,cAchB,OACE,uBAAMS,UAAU,mDAAmDH,SAThD,SAACH,GACpBA,EAAEI,iBACEhB,EAAQc,IACVN,EAAQS,KAAK,UAEfmB,EAAc,sBAId,UACE,qBAAKlB,UAAU,OAAf,SACE,wBAAOC,QAAQ,WAAWD,UAAU,aAApC,0BAEE,uBACEE,KAAK,MACLC,KAAK,OACLH,UAAU,eACVI,GAAG,WACHR,MAAOA,EACPU,UAAQ,EACRC,SAxBW,SAAC,GAAgB,IAAdZ,EAAa,EAAbA,OACtBqB,EAASrB,EAAOC,UAyBTqB,GAAc,mBAAGjB,UAAU,cAAb,SAA4BiB,SAG/C,wBAAQd,KAAK,SAASH,UAAU,oCAAhC,2BCxBSmB,EAVE,SAAC,GAAiB,IAAfrC,EAAc,EAAdA,QAClB,OACE,qBAAKkB,UAAU,mEAAf,SACE,qBAAKA,UAAU,eAAeoB,MAAO,CAAEC,OAAQ,SAA/C,SACE,cAAC,EAAD,CAASvC,QAASA,S,iCCRpBwC,EAAO,6BACPC,EAAS,KAIAC,EAFA,SAACC,GAAD,MAAU,CAACH,EAAMC,EAAQE,GAAMC,KAAK,MCD7CC,EAAkB,SAACC,GAAD,IAAMC,EAAN,uDAAY,GAAZ,OACtBC,OAAOC,QAAQF,GAAKG,SAAQ,mCAAEC,EAAF,KAAOrC,EAAP,YAAkBgC,EAAIM,aAAaC,IAAIF,EAAKrC,OAEpEwC,EAAgB,SAACP,GAAD,OAASC,OAAOO,KAAKR,GAAKS,OAAS,GAkB1CC,EAhBM,uCAAG,WAAOd,GAAP,qCAAAe,EAAA,6DAAaC,EAAb,+BAAqB,GACrCC,EAAQlB,EAAOC,GACfG,EAAM,IAAIe,IAAID,GAChBN,EAAcK,IAChBd,EAAgBC,EAAKa,GAJD,kBAOGG,MAAMhB,GAPT,cAOdiB,EAPc,iBAQDA,EAASC,OARR,eAQdC,EARc,iBASAF,EAASG,QAAQC,IAAI,eATrB,eASdC,EATc,yBAUb,CAAEH,OAAMG,UAVK,wCAYd,IAAIC,MAAJ,MAZc,0DAAH,sDCsBNC,EA1BA,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,OACtBhE,EAAUC,cAEhB,OACE,qBAAK6B,MAAO,CAAEmC,gBAAiB,WAA/B,SACE,qBAAIvD,UAAU,4CAAd,UACE,oBAAIA,UAAU,WAAd,SACGqD,GACC,wBACErD,UAAU,yBACVwD,QAAS,kBAAMlE,EAAQmE,UACvBrC,MAAO,CAAEsC,YAAa,QAHxB,sBASJ,oBAAI1D,UAAU,WAAd,SACE,wBAAQA,UAAU,yBAAyBwD,QAAS,kBAAMF,KAA1D,4BCSKK,EA3BE,SAAC,GAAyC,IAAvCzD,EAAsC,EAAtCA,KAAM0D,EAAgC,EAAhCA,KAAM5C,EAA0B,EAA1BA,SAAU6C,EAAgB,EAAhBA,UAAgB,EACvB9E,mBAASmB,GADc,mBACjDN,EADiD,KAC1CkE,EAD0C,KASxD,OACE,yBACE5D,KAAMA,EACNF,UAAU,yBACV+D,SAAUF,EACVjE,MAAOA,EACPW,SAZiB,SAACb,GACpBA,EAAEI,iBACFgE,EAAgBpE,EAAEC,OAAOC,OACzBoB,EAAStB,EAAEC,SAIX,UAOE,wBAAQC,MAAM,GAAd,SAAkBM,IACjB0D,EAAKI,KAAI,SAAC7D,EAAM8D,GAAP,OACR,wBAAgBrE,MAAOO,EAAvB,SACGA,GADU8D,UCtBN,MAA0B,iCCU1BC,EARA,WACb,OACE,qBAAKlE,UAAU,gEAAf,SACE,qBAAKA,UAAU,WAAWmE,IAAKC,EAAKC,IAAI,eCmB/BC,EArBE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACV3C,EAAQ4C,cAAR5C,IAGR,OAFA6C,QAAQC,IAAI9C,GAGV,qBAAK5B,UAAU,6DAAf,SACGuE,EAAMP,KAAI,SAACW,EAAMV,GAChB,OACE,sBAAKjE,UAAU,sBAAf,UACE,qBAAKmE,IAAKQ,EAAKC,SAAU5E,UAAU,eAAeqE,IAAI,QACtD,sBAAKrE,UAAU,qBAAf,UACE,cAAC,IAAD,CAAMvB,GAAI,CAAEoG,SAAS,GAAD,OAAKjD,EAAL,YAAY+C,EAAKvE,IAAM0E,MAAOH,GAAlD,SAA2DA,EAAKzE,OAChE,mBAAGF,UAAU,YAAb,SAA0B2E,EAAKI,cAJOd,SC6BrCe,EAxCE,SAACC,EAAMC,EAAUhC,GAChC,IAAMiC,EAAWC,KAAKC,KAAKnC,EAAQgC,GACnC,GAAID,EAAOE,EACT,OAAO,KAET,IAGMG,EAAY,MACZC,EAAQ,GACd,GAJiB,GAIDJ,EACd,IAAK,IAAIlB,EANO,EAMQA,GAAKkB,EAAUlB,IACrCsB,EAAMxF,KAAKkE,QAGb,GAAIgB,EAVY,GAEH,EAQmB,CAC9B,IAAK,IAAIhB,EAAI,EAAGA,GAAKgB,EATV,EASyBhB,IAClCsB,EAAMxF,KAAKkE,GAEbsB,EAAMxF,KAAKuF,GACXC,EAAMxF,KAAKoF,QACN,GAAIA,EAAWF,GAdT,EAcyB,CACpCM,EAAMxF,KAjBQ,GAkBdwF,EAAMxF,KAAKuF,GACX,IAAK,IAAIrB,EAAIgB,EAjBF,EAiBiBhB,GAAKkB,EAAUlB,IACzCsB,EAAMxF,KAAKkE,OAER,CACLsB,EAAMxF,KAvBQ,GAwBdwF,EAAMxF,KAAKuF,GACX,IAAK,IAAIrB,EAAIgB,EAvBF,EAuBiBhB,GAAKgB,EAvBtB,EAuBqChB,IAC9CsB,EAAMxF,KAAKkE,GAEbsB,EAAMxF,KAAKuF,GACXC,EAAMxF,KAAKoF,GAGf,OAAOI,GCHMC,EA/BK,SAAC,GAAwC,IAAtCP,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,SAAUhC,EAAqB,EAArBA,MAAOuC,EAAc,EAAdA,QAC5C,GAAc,IAAVvC,EACF,OAAO,KAET,IAAMwC,EAAYV,EAASC,EAAMC,EAAUhC,GAI3C,OACE,qBAAKlD,UAAU,qCAAqCoB,MAAO,CAAEmC,gBAAiB,WAA9E,SACE,qBAAKoC,aAAW,0BAAhB,SACE,oBAAI3F,UAAU,yCAAd,SACG0F,EAAU1B,KAAI,SAACiB,EAAMhB,GACpB,OACE,oBAAYjE,UAAU,YAAtB,SACE,wBACEA,UAAU,qBACVoB,MAAO,CAAEmC,gBAAiB,UAAWG,YAAa,QAClDF,SAbKoC,EAagBX,EAbA,WACnCQ,EAAQG,KASI,SAKGX,KANIhB,GATD,IAAC2B,YCgCRC,EArCF,WACX,IAAMlB,EAAOmB,cAAchB,MAC3B,OACE,mCACE,sBAAK9E,UAAU,8BAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,8CAAf,SACE,qBAAKmE,IAAKQ,EAAKoB,cAAe1B,IAAKM,EAAKzE,KAAMF,UAAU,qBAG5D,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,MAAf,UACE,8BACE,0CACA,iCAAS2E,EAAKzE,UAEfyE,EAAKqB,OAAS,4CAAarB,EAAKqB,MAAlB,OACf,+CAAgBrB,EAAKsB,WACrB,uBACCtB,EAAKuB,SAAW,oDAAqBvB,EAAKuB,QAAQ,GAAGC,UACrDxB,EAAKuB,SAAW,kDAAmBvB,EAAKuB,QAAQ,GAAGE,KAAK,MACxDzB,EAAK0B,aAAe,mDAAoBC,KAAKC,UAAU5B,EAAK0B,YAAY,OACxE1B,EAAK6B,aAAe,mDAAoB7B,EAAK6B,eAC7C7B,EAAKuB,SACJvB,EAAKuB,QAAQlC,KAAI,SAACxB,GAAD,OACf,gCACE,mBAAGxC,UAAU,OAAb,yBAA8BwC,EAAEtC,QAC/BsC,EAAEiE,MAAQ,uDAAwBjE,EAAEiE,UAF7B9B,EAAKvE,kBChBzBsG,G,MAAe,CAAEV,MAAO,GAAIC,QAAS,GAAIhB,KAAM,EAAGC,SAAU,IAE5DyB,EAAY,CAChB,CAAElF,KAAM,QAASvB,KAAM,SACvB,CAAEuB,KAAM,WAAYvB,KAAM,YAEtB0G,EAAwBD,EAAUE,QAAO,SAACC,EAAD,OAAQrF,EAAR,EAAQA,KAAR,mBAAC,eAAwBqF,GAAzB,kBAA+BrF,EAAO,OAAO,IACtFsF,EAAe,CAAExC,MAAO,GAAIrB,MAAO,GACnC8D,EAAiB,SAACC,GAAD,OAAc,SAAChC,GAAD,OAAUgC,GAAS,SAACnC,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBG,cAC1EiC,EAAmB,SAACD,GAAD,OAAc,SAACtH,GAAD,OACrCsH,GAAS,SAACnC,GAAD,mBAAC,eACLA,GADI,kBAENnF,EAAOO,KAAOP,EAAOC,aA4FXuH,EAzFD,SAAC,GAAgB,IAAd7D,EAAa,EAAbA,OAAa,EACFvE,mBAAS2H,GADP,mBACrBjE,EADqB,KACdwE,EADc,OAEFlI,mBAAS6H,GAFP,mBAErBZ,EAFqB,KAEdoB,EAFc,OAGFrI,mBAASgI,GAHP,mBAGrBxC,EAHqB,KAGd8C,EAHc,OAIwBtI,oBAAS,GAJjC,mBAIrBuI,EAJqB,KAIDC,EAJC,OAKgBxI,oBAAS,GALzB,mBAKrByI,EALqB,KAKLC,EALK,KAMpBhG,EAAS+C,cAAT/C,KAoCR,OAlCAiG,qBAAU,WACRH,GAAsB,GAYHZ,EAVZ3E,QAAL,uCAAa,iCAAAQ,EAAA,6DAASf,EAAT,EAASA,KAAT,kBAEcc,EAAgBd,GAF9B,gBAEDsB,EAFC,EAEDA,KACRqE,GAAS,SAACtC,GAAD,mBAAC,eAAgBA,GAAjB,kBAAyBrD,EAAOsB,EAAKtB,QAC9C8F,GAAsB,GAJb,kDAMTI,MAAM,EAAD,IANI,0DAAb,yDAWD,IAEHD,qBAAU,WACY,KAAhBjF,EAAMuD,OAAkC,KAAlBvD,EAAMwD,SAIhCwB,GAAkB,GACE,uCAAG,WAAOhG,GAAP,mBAAAe,EAAA,+EAEWD,EAAgBd,EAAMgB,GAFjC,gBAEXM,EAFW,EAEXA,KAAMG,EAFK,EAELA,MACdmE,EAAS,CAAE9C,MAAOxB,EAAKwB,MAAOrB,MAAO0E,OAAO1E,KAC5CuE,GAAkB,GAJC,kDAMnBE,MAAM,EAAD,IANc,0DAAH,qDASpBE,CArDc,UAwCZR,EAASN,KAcV,CAACtE,IAGF,sBAAKzC,UAAU,4CAAf,UACE,cAAC,EAAD,CAAQqD,YAAY,EAAMC,OAAQA,IAClC,qBAAKtD,UAAU,8BAAf,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAO8H,OAAK,EAACrG,KAAMA,EAAnB,UACE,qBAAKzB,UAAU,kBAAf,SACE,qBACEA,UAAU,qDACVoB,MAAO,CAAEmC,gBAAiB,WAF5B,SAIGoD,EAAU3C,KAAI,WAAiBC,GAAjB,IAAGxC,EAAH,EAAGA,KAAMvB,EAAT,EAASA,KAAT,OACb,cAAC,EAAD,CAEEA,KAAMA,EACNc,SAAUkG,EAAiBD,GAC3BrD,KAAMoC,EAAMvE,GACZoC,UAAWyD,GAJNrD,UASb,qBAAKjE,UAAU,uBAAf,SACE,sBAAKA,UAAU,yEAAf,UACGwH,GAAkBF,EACjB,cAAC,EAAD,IAEA,cAAC,EAAD,CAAU/C,MAAOA,EAAMA,QAEzB,cAAC,EAAD,CACEU,KAAMxC,EAAMwC,KACZC,SAAUzC,EAAMyC,SAChBhC,MAAOqB,EAAMrB,MACbuC,QAASuB,EAAeC,aAKhC,cAAC,IAAD,CAAOxF,KAAI,UAAKA,EAAL,YAAX,SACE,cAAC,EAAD,CAAM8C,MAAOA,EAAMA,mB,QC5GlBwD,EAAe,SAAClH,EAAOmH,GAAR,OAAoB,SAAChJ,EAAOE,GACtD,IAAM+I,EAAOpH,EAAMqH,MAAK,SAACC,GAAD,OAAOA,EAAEnJ,QAAUA,KAC3C,SAAIiJ,GACEA,EAAK/I,WAAaA,KACpB8I,GAAQ,SAACC,GAAD,mBAAC,eAAeA,GAAhB,IAAsBjJ,QAAOE,WAAUkJ,WAAW,QACnD,KAMAC,EAAc,SAACC,EAAKN,GAAN,OAAkB,SAACO,GAC5C,OAAIA,IAAaD,IACfN,GAAQ,SAACC,GAAD,mBAAC,eAAeA,GAAhB,IAAsBO,UAAU,QACjC,KCLL3H,EAAQ,CAAC,ICRb,WAAY4H,EAAUC,EAAMJ,GAAM,oBAChCK,KAAK3J,MAAQyJ,EACbE,KAAKzJ,SAAWwJ,EAChBC,KAAKL,IAAMA,EDKA,CAAS,eAAgB,aAClCM,EAAc,CAClB5J,MAAO,KACPE,SAAU,KACVkJ,WAAW,EACXE,IAAK,SACLE,UAAU,GAyBGK,EAtBH,WAAO,IAAD,EACQ9J,mBAAS6J,GADjB,mBACTX,EADS,KACHD,EADG,KAKhB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAoBvG,KAAK,SAASjD,UAAWyJ,EAAKO,SAAU/J,GAAI,IAAhE,SACE,cAAC,EAAD,CAAO6E,OANA,kBAAM0E,EAAQY,QAQvB,cAAC,EAAD,CAAoBnH,KAAK,OAAOjD,UAAWyJ,EAAKG,UAAW3J,GAAI,IAA/D,SACE,cAAC,EAAD,CAAU6J,IAAKL,EAAKK,IAAKxJ,QAASuJ,EAAYJ,EAAKK,IAAKN,OAE1D,cAAC,EAAD,CAAoBvG,KAAK,IAAIjD,WAAYyJ,EAAKO,SAAU/J,GAAI,SAA5D,SACE,cAAC,EAAD,CAAMoC,MAAOA,EAAO/B,QAASiJ,EAAalH,EAAOmH,aErB5Cc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAAS3K,OACP,cAAC,IAAM4K,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7f0acea2.chunk.js","sourcesContent":["import { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst RouteWithCondition = ({ condition, to, children, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        return condition ? children : <Redirect to={to} />;\n      }}\n    />\n  );\n};\n\nexport default RouteWithCondition;\n\nRouteWithCondition.propTypes = {\n  condition: PropTypes.bool.isRequired,\n  to: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Login = ({ isValid }) => {\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [invalidUser, setInvalidUser] = useState(false);\n\n  const history = useHistory();\n\n  const handleSumbit = (e) => {\n    e.preventDefault();\n    if (isValid(login, password)) {\n      setInvalidUser(false);\n      history.push('/otp');\n    }\n    setInvalidUser(true);\n  };\n\n  const handleChange = (setState) => (e) => {\n    setState(e.target.value);\n  };\n  return (\n    <form onSubmit={handleSumbit}>\n      <div className=\"mb-3\">\n        <label htmlFor=\"inputLogin\" className=\"form-label\">\n          Login\n          <input\n            name=\"login\"\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputLogin\"\n            aria-describedby=\"loginHelp\"\n            required\n            value={login}\n            onChange={handleChange(setLogin)}\n          />\n        </label>\n      </div>\n      <div className=\"mb-3\">\n        <label name=\"password\" htmlFor=\"inputPassword\" className=\"form-label d-block mx-auto\">\n          Password\n          <input\n            name=\"password\"\n            type=\"password\"\n            className=\"form-control\"\n            id=\"inputPassword\"\n            value={password}\n            required\n            onChange={handleChange(setPassword)}\n          />\n        </label>\n      </div>\n\n      <button type=\"submit\" className=\"btn btn-secondary d-block mx-auto\">\n        Sign In\n      </button>\n      {invalidUser && <p className=\"text-danger my-2 pl-3\">Login or password is not valid</p>}\n    </form>\n  );\n};\n\nexport default Login;\n\nLogin.propsType = { isValid: PropTypes.func.isRequired };\n","import PropTypes from 'prop-types';\nimport LoginForm from '../components/LoginForm';\n\nconst Home = ({ users, isValid }) => {\n  return (\n    <div className=\"container h-100 d-flex justify-content-center align-items-center\">\n      <LoginForm users={users} isValid={isValid} />\n    </div>\n  );\n};\n\nexport default Home;\n\nHome.propTypes = {\n  users: PropTypes.array.isRequired,\n  isValid: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst OtpForm = ({ isValid }) => {\n  const [value, setValue] = useState('');\n  const [isValidOTP, setIsValidOTP] = useState(null);\n  const history = useHistory();\n\n  const handleChange = ({ target }) => {\n    setValue(target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isValid(value)) {\n      history.push('/cards');\n    }\n    setIsValidOTP('Code is not valid');\n  };\n\n  return (\n    <form className=\"h-100 d-flex flex-column justify-content-between\" onSubmit={handleSubmit}>\n      <div className=\"mb-3\">\n        <label htmlFor=\"inputOtp\" className=\"form-label\">\n          Code from SMS\n          <input\n            name=\"otp\"\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputOtp\"\n            value={value}\n            required\n            onChange={handleChange}\n          />\n          {isValidOTP && <p className=\"text-danger\">{isValidOTP}</p>}\n        </label>\n      </div>\n      <button type=\"submit\" className=\"btn btn-secondary d-block mx-auto\">\n        Continue\n      </button>\n    </form>\n  );\n};\n\nexport default OtpForm;\n\nOtpForm.propTypes = { isValid: PropTypes.func.isRequired };\n","import PropTypes from 'prop-types';\nimport './otp.css';\nimport OTPForm from '../components/OtpForm.js';\n\nconst CheckOTP = ({ isValid }) => {\n  return (\n    <div className=\"container h-100 d-flex justify-content-center align-items-center\">\n      <div className=\"p-3 bg-light\" style={{ height: '242px' }}>\n        <OTPForm isValid={isValid} />\n      </div>\n    </div>\n  );\n};\n\nexport default CheckOTP;\n\nCheckOTP.propTypes = {\n  isValid: PropTypes.func,\n};\n","const host = 'https://api.pokemontcg.io/';\nconst prefix = 'v1';\n\nconst routes = (path) => [host, prefix, path].join('/');\n\nexport default routes;\n","import routes from './routes';\n\nconst setSearchParams = (url, obj = {}) =>\n  Object.entries(obj).forEach(([key, value]) => url.searchParams.set(key, value));\n\nconst isObjWithKeys = (obj) => Object.keys(obj).length > 0;\n\nconst getPokemonsData = async (path, query = {}) => {\n  const route = routes(path);\n  const url = new URL(route);\n  if (isObjWithKeys(query)) {\n    setSearchParams(url, query);\n  }\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    const total = await response.headers.get('total-count');\n    return { data, total };\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\nexport default getPokemonsData;\n","import PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nconst NavBar = ({ isLinkBack, logout }) => {\n  const history = useHistory();\n\n  return (\n    <div style={{ backgroundColor: '#EBEBEB' }}>\n      <ul className=\"nav d-flex justify-content-between border\">\n        <li className=\"nav-item\">\n          {isLinkBack && (\n            <button\n              className=\"btn btn-link text-dark\"\n              onClick={() => history.goBack()}\n              style={{ borderStyle: 'none' }}\n            >\n              &lt; Back\n            </button>\n          )}\n        </li>\n        <li className=\"nav-item\">\n          <button className=\"btn btn-link text-dark\" onClick={() => logout()}>\n            Logout\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n};\nexport default NavBar;\n\nNavBar.propTypes = {\n  isLinkBack: PropTypes.bool,\n  logout: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Selector = ({ name, list, setValue, isLoading }) => {\n  const [value, setCurrentValue] = useState(name);\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setCurrentValue(e.target.value);\n    setValue(e.target);\n  };\n\n  return (\n    <select\n      name={name}\n      className=\"form-select  my-3 w-75\"\n      disabled={isLoading}\n      value={value}\n      onChange={handleChange}\n    >\n      <option value=\"\">{name}</option>\n      {list.map((type, i) => (\n        <option key={i} value={type}>\n          {type}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default Selector;\n\nSelector.propTypes = {\n  name: PropTypes.string.isRequired,\n  list: PropTypes.array.isRequired,\n  setValue: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import svg from '../logo.svg';\n\nconst Loader = () => {\n  return (\n    <div className=\" w-100 h-100 d-flex justify-content-center align-items-center\">\n      <img className=\"App-logo\" src={svg} alt=\"loading\" />\n    </div>\n  );\n};\n\nexport default Loader;\n","import PropTypes from 'prop-types';\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nconst CardsBox = ({ cards }) => {\n  const { url } = useRouteMatch();\n  console.log(url);\n\n  return (\n    <div className=\"d-flex flex-wrap justify-content-center aligh-items-center\">\n      {cards.map((card, i) => {\n        return (\n          <div className=\"card w-25 my-2 mx-4\" key={i}>\n            <img src={card.imageUrl} className=\"card-img-top\" alt=\"...\" />\n            <div className=\"card-body p-1 h-25\">\n              <Link to={{ pathname: `${url}/${card.id}`, state: card }}>{card.name}</Link>\n              <p className=\"card-text\">{card.artist}</p>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardsBox;\n\nCardsBox.propTypes = {\n  cards: PropTypes.array.isRequired,\n};\n","const paginate = (page, pageSize, total) => {\n  const lastPage = Math.ceil(total / pageSize);\n  if (page > lastPage) {\n    return null;\n  }\n  const firstPage = 1;\n  const pageShow = 5;\n  const border = 2;\n  const separator = '...';\n  const pages = [];\n  if (pageShow >= lastPage) {\n    for (let i = firstPage; i <= lastPage; i++) {\n      pages.push(i);\n    }\n  } else {\n    if (page - firstPage <= border) {\n      for (let i = 1; i <= page + border; i++) {\n        pages.push(i);\n      }\n      pages.push(separator);\n      pages.push(lastPage);\n    } else if (lastPage - page <= border) {\n      pages.push(firstPage);\n      pages.push(separator);\n      for (let i = page - border; i <= lastPage; i++) {\n        pages.push(i);\n      }\n    } else {\n      pages.push(firstPage);\n      pages.push(separator);\n      for (let i = page - border; i <= page + border; i++) {\n        pages.push(i);\n      }\n      pages.push(separator);\n      pages.push(lastPage);\n    }\n  }\n  return pages;\n};\n\nexport default paginate;\n","import paginate from '../utils/paginate';\nimport PropTypes from 'prop-types';\n\nconst PaginateBox = ({ page, pageSize, total, setPage }) => {\n  if (total === 0) {\n    return null;\n  }\n  const pagesList = paginate(page, pageSize, total);\n  const handleClick = (currentPage) => () => {\n    setPage(currentPage);\n  };\n  return (\n    <div className=\"d-flex justify-content-center py-1\" style={{ backgroundColor: '#EBEBEB' }}>\n      <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination justify-content-center my-0\">\n          {pagesList.map((page, i) => {\n            return (\n              <li key={i} className=\"page-item\">\n                <button\n                  className=\"btn text-dark mx-1\"\n                  style={{ backgroundColor: '#EBEBEB', borderStyle: 'none' }}\n                  onClick={handleClick(page)}\n                >\n                  {page}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default PaginateBox;\n\nPaginateBox.propTypes = {\n  page: PropTypes.number,\n  pageSize: PropTypes.number,\n  total: PropTypes.number,\n  setQuery: PropTypes.func,\n};\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst Card = () => {\n  const card = useLocation().state;\n  return (\n    <>\n      <div className=\"row my-2 d-flex flex-grow-1\">\n        <div className=\"col-md-6 \">\n          <div className=\"d-flex flex-column align-items-center h-100\">\n            <img src={card.imageUrlHiRes} alt={card.name} className=\"w-50 px-auto\" />\n          </div>\n        </div>\n        <div className=\"col-md-6\">\n          <div className=\"p-2\">\n            <p>\n              <span>{`Name: `}</span>\n              <strong>{card.name}</strong>\n            </p>\n            {card.types && <p>{`Type: ${card.types} `}</p>}\n            <p>{`Subtype: ${card.subtype}`}</p>\n            <hr />\n            {card.attacks && <p>{`attackDamage: ${card.attacks[0].damage}`}</p>}\n            {card.attacks && <p>{`attackCost: ${card.attacks[0].cost[0]}`}</p>}\n            {card.resistances && <p>{`resistances: ${JSON.stringify(card.resistances[0])}`}</p>}\n            {card.evolvesFrom && <p>{`evolvesFrom: ${card.evolvesFrom}`}</p>}\n            {card.attacks &&\n              card.attacks.map((a) => (\n                <div key={card.id}>\n                  <p className=\"mb-1\">{`Name: ${a.name}`}</p>\n                  {a.text && <small>{`Description: ${a.text}`}</small>}\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Card;\n","import { useState, useEffect } from 'react';\nimport getPokemonsData from '../API';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport NavBar from '../components/NavBar';\nimport Selector from '../components/Selector';\nimport Loader from '../components/Loader';\nimport CardsBox from '../components/CardsBox';\nimport PaginateBox from '../components/PaginateBox';\nimport Card from '../components/Card';\nimport '../App.css';\n\nconst defaultQuery = { types: '', subtype: '', page: 1, pageSize: 6 };\nconst cardsPath = 'cards';\nconst selectors = [\n  { path: 'types', name: 'types' },\n  { path: 'subtypes', name: 'subtype' },\n];\nconst defaultSelectorsState = selectors.reduce((acc, { path }) => ({ ...acc, [path]: [] }), {});\nconst defaultCards = { cards: [], total: 0 };\nconst setCurrentPage = (setQuery) => (page) => setQuery((state) => ({ ...state, page }));\nconst setSelectorValue = (setQuery) => (target) =>\n  setQuery((state) => ({\n    ...state,\n    [target.name]: target.value,\n  }));\n\nconst Cards = ({ logout }) => {\n  const [query, setQuery] = useState(defaultQuery);\n  const [types, setTypes] = useState(defaultSelectorsState);\n  const [cards, setCards] = useState(defaultCards);\n  const [isLoadingSelectors, setIsLoadingSelectors] = useState(false);\n  const [isLoadingCards, setIsLoadingCards] = useState(false);\n  const { path } = useRouteMatch();\n\n  useEffect(() => {\n    setIsLoadingSelectors(true);\n    const fetchSelectorsData = (list) => {\n      list.forEach(async ({ path }) => {\n        try {\n          const { data } = await getPokemonsData(path);\n          setTypes((state) => ({ ...state, [path]: data[path] }));\n          setIsLoadingSelectors(false);\n        } catch (err) {\n          alert(err);\n        }\n      });\n    };\n    fetchSelectorsData(selectors);\n  }, []);\n\n  useEffect(() => {\n    if (query.types === '' && query.subtype === '') {\n      setCards(defaultCards);\n      return;\n    }\n    setIsLoadingCards(true);\n    const fetchCardsData = async (path) => {\n      try {\n        const { data, total } = await getPokemonsData(path, query);\n        setCards({ cards: data.cards, total: Number(total) });\n        setIsLoadingCards(false);\n      } catch (err) {\n        alert(err);\n      }\n    };\n    fetchCardsData(cardsPath);\n  }, [query]);\n\n  return (\n    <div className=\"container-fluid h-100 d-flex flex-column \">\n      <NavBar isLinkBack={true} logout={logout} />\n      <div className=\"row my-2 d-flex flex-grow-1\">\n        <Switch>\n          <Route exact path={path}>\n            <div className=\"col-sm-3 d-flex\">\n              <div\n                className=\"border w-100 d-flex flex-column align-items-center\"\n                style={{ backgroundColor: '#FAFAFA' }}\n              >\n                {selectors.map(({ path, name }, i) => (\n                  <Selector\n                    key={i}\n                    name={name}\n                    setValue={setSelectorValue(setQuery)}\n                    list={types[path]}\n                    isLoading={isLoadingSelectors}\n                  />\n                ))}\n              </div>\n            </div>\n            <div className=\"col-sm-9 flex-grow-1\">\n              <div className=\"bg-light border h-100 w-100 d-flex flex-column justify-content-between\">\n                {isLoadingCards || isLoadingSelectors ? (\n                  <Loader />\n                ) : (\n                  <CardsBox cards={cards.cards} />\n                )}\n                <PaginateBox\n                  page={query.page}\n                  pageSize={query.pageSize}\n                  total={cards.total}\n                  setPage={setCurrentPage(setQuery)}\n                />\n              </div>\n            </div>\n          </Route>\n          <Route path={`${path}/:cardId`}>\n            <Card cards={cards.cards} />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default Cards;\n\nCards.propTypes = {\n  logout: PropTypes.func.isRequired,\n};\n","export const validateUser = (users, setUser) => (login, password) => {\n  const user = users.find((u) => u.login === login);\n  if (user) {\n    if (user.password === password) {\n      setUser((user) => ({ ...user, login, password, passCheck: true }));\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const validateOtp = (otp, setUser) => (otpValue) => {\n  if (otpValue === otp) {\n    setUser((user) => ({ ...user, otpCheck: true }));\n    return true;\n  }\n  return false;\n};\n","import { useState } from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport RouteWithCondition from './components/RouteWithCondition';\nimport Home from './pages/Home';\nimport CheckOTP from './pages/CheckOTP';\nimport Cards from './pages/Cards';\nimport User from './entities/User';\nimport { validateUser, validateOtp } from './utils/validate';\n\nconst users = [new User('kode@kode.ru', 'Enk0deng')];\nconst defaultUser = {\n  login: null,\n  password: null,\n  passCheck: false,\n  otp: '123456',\n  otpCheck: false,\n};\n\nconst App = () => {\n  const [user, setUser] = useState(defaultUser);\n\n  const logout = () => setUser(defaultUser);\n\n  return (\n    <Router>\n      <Switch>\n        <RouteWithCondition path=\"/cards\" condition={user.otpCheck} to={'/'}>\n          <Cards logout={logout} />\n        </RouteWithCondition>\n        <RouteWithCondition path=\"/otp\" condition={user.passCheck} to={'/'}>\n          <CheckOTP otp={user.otp} isValid={validateOtp(user.otp, setUser)} />\n        </RouteWithCondition>\n        <RouteWithCondition path=\"/\" condition={!user.otpCheck} to={'/cards'}>\n          <Home users={users} isValid={validateUser(users, setUser)} />\n        </RouteWithCondition>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","class User {\n  constructor(nickname, pass, otp) {\n    this.login = nickname;\n    this.password = pass;\n    this.otp = otp;\n  }\n}\n\nexport default User;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}