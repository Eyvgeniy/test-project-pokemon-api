{"version":3,"sources":["components/RouteWithCondition.js","components/LoginForm.js","pages/Home.js","components/OtpForm.js.js","pages/CheckOTP.js","API/routes.js","API/index.js","components/NavBar.js","components/Selector.js","logo.svg","components/Loader.js","components/CardsBox.js","utils/paginate.js","components/PaginateBox.js","components/Card.js","components/Modal.js","pages/Cards.js","pages/LoggedIn.js","utils/validate.js","App.js","reportWebVitals.js","index.js","entities/User.js"],"names":["RouteWithCondition","condition","to","children","rest","render","Login","isValid","useState","login","setLogin","password","setPassword","invalidUser","setInvalidUser","history","useHistory","handleChange","setState","e","target","value","onSubmit","preventDefault","push","className","htmlFor","name","type","id","aria-describedby","required","onChange","propsType","PropTypes","func","isRequired","Home","LoginForm","OtpForm","setValue","isValidOTP","setIsValidOTP","CheckOTP","style","height","host","prefix","routes","path","join","setSearchParams","url","obj","Object","entries","forEach","key","searchParams","set","isObjWithKeys","keys","length","getPokemonsData","a","query","route","URL","fetch","response","json","data","headers","get","total","Error","NavBar","isLinkBack","logout","backgroundColor","onClick","goBack","borderStyle","Selector","list","isLoading","setBeginPage","defaultValue","setCurrentValue","disabled","map","i","Loader","src","svg","alt","CardsBox","cards","showModal","useRouteMatch","card","imageUrl","imageUrlHiRes","pathname","state","artist","paginate","page","pageSize","lastPage","Math","ceil","separator","pages","PaginateBox","setPage","pagesList","aria-label","p","currentPage","btnClass","cn","Card","useLocation","types","subtype","attacks","damage","cost","resistances","JSON","stringify","evolvesFrom","text","ModalWindow","pokemon","closeModal","handleClose","Modal","show","onHide","Header","closeButton","Title","Body","img","Footer","Button","variant","defaultQuery","selectors","defaultSelectorsState","reduce","acc","defaultCards","defaultPokemon","setCurrentPage","setQuery","setSelectorValue","Cards","setTypes","setCards","setShowModal","isLoadingSelectors","setIsLoadingSelectors","isLoadingCards","setIsLoadingCards","useEffect","alert","Number","fetchCardsData","exact","imgLink","LoggedIn","setTimeout","saveUSerToLocalStorage","user","localStorage","setItem","getUserFromLocalStorage","parse","getItem","validateUser","users","setUser","find","u","trim","passCheck","validateOtp","otp","otpValue","otpCheck","userWithOtpCheck","defaultUser","App","savedUser","initUSer","clear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","nickname","pass","this","ReactDOM","StrictMode","document","getElementById"],"mappings":"2RAceA,EAXY,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,SAAaC,EAAW,6CACnE,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,WACN,OAAOJ,EAAYE,EAAW,cAAC,IAAD,CAAUD,GAAIA,S,OCJ9CI,EAAQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACHC,mBAAS,IADN,mBACtBC,EADsB,KACfC,EADe,OAEGF,mBAAS,IAFZ,mBAEtBG,EAFsB,KAEZC,EAFY,OAGSJ,oBAAS,GAHlB,mBAGtBK,EAHsB,KAGTC,EAHS,KAKvBC,EAAUC,cAWVC,EAAe,SAACC,GAAD,OAAc,SAACC,GAClCD,EAASC,EAAEC,OAAOC,SAEpB,OACE,uBAAMC,SAba,SAACH,GACpBA,EAAEI,iBACEhB,EAAQE,EAAOE,KACjBG,GAAe,GACfC,EAAQS,KAAK,SAEfV,GAAe,IAOf,UACE,qBAAKW,UAAU,OAAf,SACE,wBAAOC,QAAQ,aAAaD,UAAU,6BAAtC,kBAEE,uBACEE,KAAK,QACLC,KAAK,OACLH,UAAU,eACVI,GAAG,aACHC,mBAAiB,YACjBC,UAAQ,EACRV,MAAOZ,EACPuB,SAAUf,EAAaP,UAI7B,qBAAKe,UAAU,OAAf,SACE,wBAAOE,KAAK,WAAWD,QAAQ,gBAAgBD,UAAU,6BAAzD,qBAEE,uBACEE,KAAK,WACLC,KAAK,WACLH,UAAU,eACVI,GAAG,gBACHR,MAAOV,EACPoB,UAAQ,EACRC,SAAUf,EAAaL,UAK7B,wBAAQgB,KAAK,SAASH,UAAU,oCAAhC,qBAGCZ,GAAe,mBAAGY,UAAU,mBAAb,gDAKPnB,IAEfA,EAAM2B,UAAY,CAAE1B,Q,OAAS2B,EAAUC,KAAKC,YC9D5C,IAUeC,EAVF,SAAC,GAAiB,IAAf9B,EAAc,EAAdA,QACd,OACE,qBAAKkB,UAAU,mEAAf,SACE,qBAAKA,UAAU,SAAf,SACE,cAACa,EAAD,CAAW/B,QAASA,SCsCbgC,EAzCC,SAAC,GAAiB,IAAfhC,EAAc,EAAdA,QAAc,EACLC,mBAAS,IADJ,mBACxBa,EADwB,KACjBmB,EADiB,OAEKhC,mBAAS,MAFd,mBAExBiC,EAFwB,KAEZC,EAFY,KAGzB3B,EAAUC,cAchB,OACE,uBAAMS,UAAU,mDAAmDH,SAThD,SAACH,GACpBA,EAAEI,iBACEhB,EAAQc,IACVN,EAAQS,KAAK,UAEfkB,EAAc,sBAId,UACE,qBAAKjB,UAAU,OAAf,SACE,wBAAOC,QAAQ,WAAWD,UAAU,aAApC,0BAEE,uBACEE,KAAK,MACLC,KAAK,OACLH,UAAU,eACVI,GAAG,WACHR,MAAOA,EACPU,UAAQ,EACRC,SAxBW,SAAC,GAAgB,IAAdZ,EAAa,EAAbA,OACtBoB,EAASpB,EAAOC,UAyBToB,GAAc,mBAAGhB,UAAU,cAAb,SAA4BgB,SAG/C,wBAAQb,KAAK,SAASH,UAAU,oCAAhC,0BCzBSkB,EAVE,SAAC,GAAiB,IAAfpC,EAAc,EAAdA,QAClB,OACE,qBAAKkB,UAAU,mEAAf,SACE,qBAAKA,UAAU,eAAemB,MAAO,CAAEC,OAAQ,SAA/C,SACE,cAAC,EAAD,CAAStC,QAASA,S,iCCPpBuC,EAAO,6BACPC,EAAS,KAIAC,EAFA,SAACC,GAAD,MAAU,CAACH,EAAMC,EAAQE,GAAMC,KAAK,MCD7CC,EAAkB,SAACC,GAAD,IAAMC,EAAN,uDAAY,GAAZ,OACtBC,OAAOC,QAAQF,GAAKG,SAAQ,mCAAEC,EAAF,KAAOpC,EAAP,YAAkB+B,EAAIM,aAAaC,IAAIF,EAAKpC,OAEpEuC,EAAgB,SAACP,GAAD,OAASC,OAAOO,KAAKR,GAAKS,OAAS,GAkB1CC,EAhBM,uCAAG,WAAOd,GAAP,qCAAAe,EAAA,6DAAaC,EAAb,+BAAqB,GACrCC,EAAQlB,EAAOC,GACfG,EAAM,IAAIe,IAAID,GAChBN,EAAcK,IAChBd,EAAgBC,EAAKa,GAJD,kBAOGG,MAAMhB,GAPT,cAOdiB,EAPc,iBAQDA,EAASC,OARR,eAQdC,EARc,iBASAF,EAASG,QAAQC,IAAI,eATrB,eASdC,EATc,yBAUb,CAAEH,OAAMG,UAVK,wCAYd,IAAIC,MAAJ,MAZc,0DAAH,sDCsBNC,EA1BA,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,OACtB/D,EAAUC,cAEhB,OACE,qBAAK4B,MAAO,CAAEmC,gBAAiB,WAA/B,SACE,qBAAItD,UAAU,4CAAd,UACE,oBAAIA,UAAU,WAAd,SACGoD,GACC,wBACEpD,UAAU,yBACVuD,QAAS,kBAAMjE,EAAQkE,UACvBrC,MAAO,CAAEsC,YAAa,QAHxB,sBASJ,oBAAIzD,UAAU,WAAd,SACE,wBAAQA,UAAU,yBAAyBuD,QAAS,kBAAMF,KAA1D,4BCWKK,EA7BE,SAAC,GAA8D,IAA5DxD,EAA2D,EAA3DA,KAAMyD,EAAqD,EAArDA,KAAM5C,EAA+C,EAA/CA,SAAU6C,EAAqC,EAArCA,UAAWpB,EAA0B,EAA1BA,MAAOqB,EAAmB,EAAnBA,aACpDC,EAAetB,EAAMtC,IAASA,EADyC,EAE5CnB,mBAAS+E,GAFmC,mBAEtElE,EAFsE,KAE/DmE,EAF+D,KAW7E,OACE,yBACE7D,KAAMA,EACNF,UAAU,yBACVgE,SAAUJ,EACVhE,MAAOA,EACPW,SAbiB,SAACb,GACpBA,EAAEI,iBACFiE,EAAgBrE,EAAEC,OAAOC,OACzBmB,EAASrB,EAAEC,QACXkE,KAIA,UAOE,wBAAQjE,MAAM,GAAd,SAAkBM,IACjByD,EAAKM,KAAI,SAAC9D,EAAM+D,GAAP,OACR,wBAAgBtE,MAAOO,EAAvB,SACGA,GADU+D,UCxBN,MAA0B,iCCU1BC,EARA,WACb,OACE,qBAAKnE,UAAU,gEAAf,SACE,qBAAKA,UAAU,WAAWoE,IAAKC,EAAKC,IAAI,eCwB/BC,EA1BE,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UACjB9C,EAAQ+C,cAAR/C,IAER,OACE,qBAAK3B,UAAU,2EAAf,SACGwE,GACCA,EAAMP,KAAI,SAACU,EAAMT,GACf,OACE,sBAAKlE,UAAU,6BAAf,UACE,qBACEoE,IAAKO,EAAKC,SACV5E,UAAU,eACVsE,IAAI,MACJf,QAASkB,EAAUE,EAAKzE,KAAMyE,EAAKE,iBAErC,sBAAK7E,UAAU,qBAAf,UACE,cAAC,IAAD,CAAMvB,GAAI,CAAEqG,SAAS,GAAD,OAAKnD,EAAL,YAAYgD,EAAKvE,IAAM2E,MAAOJ,GAAlD,SAA2DA,EAAKzE,OAChE,mBAAGF,UAAU,YAAb,SAA0B2E,EAAKK,cATcd,S,gBC6B9Ce,EAxCE,SAACC,EAAMC,EAAUlC,GAChC,IAAMmC,EAAWC,KAAKC,KAAKrC,EAAQkC,GACnC,GAAID,EAAOE,EACT,OAAO,KAET,IAGMG,EAAY,MACZC,EAAQ,GACd,GAJiB,GAIDJ,EACd,IAAK,IAAIlB,EANO,EAMQA,GAAKkB,EAAUlB,IACrCsB,EAAMzF,KAAKmE,QAGb,GAAIgB,EAVY,GAEH,EAQmB,CAC9B,IAAK,IAAIhB,EAAI,EAAGA,GAAKgB,EATV,EASyBhB,IAClCsB,EAAMzF,KAAKmE,GAEbsB,EAAMzF,KAAKwF,GACXC,EAAMzF,KAAKqF,QACN,GAAIA,EAAWF,GAdT,EAcyB,CACpCM,EAAMzF,KAjBQ,GAkBdyF,EAAMzF,KAAKwF,GACX,IAAK,IAAIrB,EAAIgB,EAjBF,EAiBiBhB,GAAKkB,EAAUlB,IACzCsB,EAAMzF,KAAKmE,OAER,CACLsB,EAAMzF,KAvBQ,GAwBdyF,EAAMzF,KAAKwF,GACX,IAAK,IAAIrB,EAAIgB,EAvBF,EAuBiBhB,GAAKgB,EAvBtB,EAuBqChB,IAC9CsB,EAAMzF,KAAKmE,GAEbsB,EAAMzF,KAAKwF,GACXC,EAAMzF,KAAKqF,GAGf,OAAOI,GCGMC,EApCK,SAAC,GAAwC,IAAtCP,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,SAAUlC,EAAqB,EAArBA,MAAOyC,EAAc,EAAdA,QAC5C,GAAc,IAAVzC,EACF,OAAO,KAET,IAAM0C,EAAYV,EAASC,EAAMC,EAAUlC,GAI3C,OACE,qBAAKjD,UAAU,qCAAqCmB,MAAO,CAAEmC,gBAAiB,WAA9E,SACE,qBAAKsC,aAAW,0BAAhB,SACE,oBAAI5F,UAAU,yCAAd,SACG2F,GACCA,EAAU1B,KAAI,SAAC4B,EAAG3B,GAChB,IATS4B,EASHC,EAAWC,IAAG,CAClB,sBAAsB,EACtB,aAAcd,IAASW,IAEzB,OACE,oBAAY7F,UAAU,YAAtB,SACE,wBACEA,UAAW+F,EACX5E,MAAO,CAAEmC,gBAAiB,UAAWG,YAAa,QAClDF,SAlBGuC,EAkBkBD,EAlBF,WACnCH,EAAQI,KAcM,SAKGD,KANI3B,aCqBV+B,EAzCF,WACX,IAAMtB,EAAOuB,cAAcnB,MAC3B,OACE,mCACGJ,EACC,sBAAK3E,UAAU,8BAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,8CAAf,SACE,qBAAKoE,IAAKO,EAAKE,cAAeP,IAAKK,EAAKzE,KAAMF,UAAU,qBAG5D,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,MAAf,UACE,8BACE,0CACA,iCAAS2E,EAAKzE,UAEfyE,EAAKwB,OAAS,4CAAaxB,EAAKwB,MAAlB,OACf,+CAAgBxB,EAAKyB,WACrB,uBACCzB,EAAK0B,SAAW,oDAAqB1B,EAAK0B,QAAQ,GAAGC,UACrD3B,EAAK0B,SAAW,kDAAmB1B,EAAK0B,QAAQ,GAAGE,KAAK,MACxD5B,EAAK6B,aAAe,mDAAoBC,KAAKC,UAAU/B,EAAK6B,YAAY,OACxE7B,EAAKgC,aAAe,mDAAoBhC,EAAKgC,eAC7ChC,EAAK0B,SACJ1B,EAAK0B,QAAQpC,KAAI,SAAC1B,EAAG2B,GAAJ,OACf,gCACE,mBAAGlE,UAAU,OAAb,gCAAqCuC,EAAErC,QACtCqC,EAAEqE,MAAQ,uDAAwBrE,EAAEqE,UAF7B1C,cASpB,cAAC,IAAD,CAAUzF,GAAG,c,gBCfNoI,EArBK,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WACxBC,EAAc,kBAAMD,KAC1B,OACE,mCACE,eAACE,EAAA,EAAD,CAAOC,MAAM,EAAMC,OAAQH,EAA3B,UACE,cAACC,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,UAAcR,EAAQ5G,SAExB,cAAC+G,EAAA,EAAMM,KAAP,UACE,qBAAKnD,IAAK0C,EAAQU,IAAKlD,IAAI,UAAUtE,UAAU,2BAEjD,cAACiH,EAAA,EAAMQ,OAAP,UACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYpE,QAASyD,EAArC,2BCDJY,G,MAAe,CAAEzB,MAAO,GAAIC,QAAS,GAAIlB,KAAM,EAAGC,SAAU,IAE5D0C,EAAY,CAChB,CAAErG,KAAM,QAAStB,KAAM,SACvB,CAAEsB,KAAM,WAAYtB,KAAM,YAEtB4H,EAAwBD,EAAUE,QAAO,SAACC,EAAD,OAAQxG,EAAR,EAAQA,KAAR,mBAAC,eAAwBwG,GAAzB,kBAA+BxG,EAAO,OAAO,IACtFyG,EAAe,CAAEzD,MAAO,GAAIvB,MAAO,GACnCiF,EAAiB,CAAEpB,QAAS,CAAE5G,KAAM,GAAIsH,IAAK,IAAMN,KAAM,MACzDiB,EAAiB,SAACC,GAAD,OAAc,SAAClD,GAAD,OAAUkD,GAAS,SAACrD,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBG,cAC1EmD,EAAmB,SAACD,GAAD,OAAc,SAACzI,GAAD,OACrCyI,GAAS,SAACrD,GAAD,mBAAC,eACLA,GADI,kBAENpF,EAAOO,KAAOP,EAAOC,aAwGX0I,EArGD,SAAC,GAAgB,IAAdjF,EAAa,EAAbA,OAAa,EACFtE,mBAAS6I,GADP,mBACrBpF,EADqB,KACd4F,EADc,OAEFrJ,mBAAS+I,GAFP,mBAErB3B,EAFqB,KAEdoC,EAFc,OAGFxJ,mBAASkJ,GAHP,mBAGrBzD,EAHqB,KAGdgE,EAHc,OAIMzJ,mBAASmJ,GAJf,mBAIrBzD,EAJqB,KAIVgE,EAJU,OAKwB1J,oBAAS,GALjC,mBAKrB2J,EALqB,KAKDC,EALC,OAMgB5J,oBAAS,GANzB,mBAMrB6J,EANqB,KAMLC,EANK,KAOpBrH,EAASkD,cAATlD,KACAsD,EAAaoB,cAAbpB,SACFjB,EAAe,kBAAMuE,GAAS,SAACrD,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBG,KAAM,QAoClE,OAlCA4D,qBAAU,WACRH,GAAsB,GAYHd,EAVZ9F,QAAL,uCAAa,iCAAAQ,EAAA,6DAASf,EAAT,EAASA,KAAT,kBAEcc,EAAgBd,GAF9B,gBAEDsB,EAFC,EAEDA,KACRyF,GAAS,SAACxD,GAAD,mBAAC,eAAgBA,GAAjB,kBAAyBvD,EAAOsB,EAAKtB,QAC9CmH,GAAsB,GAJb,kDAMTI,MAAM,EAAD,IANI,0DAAb,yDAWD,IAEHD,qBAAU,WACY,KAAhBtG,EAAM2D,OAAkC,KAAlB3D,EAAM4D,SAIhCyC,GAAkB,GACE,uCAAG,WAAOrH,GAAP,mBAAAe,EAAA,+EAEWD,EAAgBd,EAAMgB,GAFjC,gBAEXM,EAFW,EAEXA,KAAMG,EAFK,EAELA,MACduF,EAAS,CAAEhE,MAAO1B,EAAK0B,MAAOvB,MAAO+F,OAAO/F,KAC5C4F,GAAkB,GAJC,kDAMnBE,MAAM,EAAD,IANc,0DAAH,qDASpBE,CAzDc,UA4CZT,EAASP,KAcV,CAACzF,IAGF,sBAAKxC,UAAU,sCAAf,UACGyE,EAAUyC,MACT,cAAC,EAAD,CAAOJ,QAASrC,EAAUqC,QAASC,WAAY,kBAAM0B,EAAaP,MAEpE,cAAC,EAAD,CAAQ9E,WAAyB,WAAb0B,EAAuBzB,OAAQA,IACnD,qBAAKrD,UAAU,8BAAf,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOkJ,OAAK,EAAC1H,KAAMA,EAAnB,UACE,qBAAKxB,UAAU,kBAAf,SACE,qBACEA,UAAU,qDACVmB,MAAO,CAAEmC,gBAAiB,WAF5B,SAIGuE,EAAU5D,KAAI,WAAiBC,GAAjB,IAAG1C,EAAH,EAAGA,KAAMtB,EAAT,EAASA,KAAT,OACb,cAAC,EAAD,CAEEA,KAAMA,EACNa,SAAUsH,EAAiBD,GAC3BzE,KAAMwC,EAAM3E,GACZoC,UAAW8E,EACXlG,MAAOA,EACPqB,aAAcA,GANTK,UAWb,qBAAKlE,UAAU,uBAAf,SACE,sBAAKA,UAAU,0DAAf,UACG4I,GAAkBF,EACjB,cAAC,EAAD,IAEA,cAAC,EAAD,CACElE,MAAOA,EAAMA,MACbC,UAAW,SAACvE,EAAMiJ,GAAP,OAAmB,kBAC5BV,EAAa,CAAEvB,MAAM,EAAMJ,QAAS,CAAE5G,OAAMsH,IAAK2B,SAGvD,cAAC,EAAD,CACEjE,KAAM1C,EAAM0C,KACZC,SAAU3C,EAAM2C,SAChBlC,MAAOuB,EAAMvB,MACbyC,QAASyC,EAAeC,aAKhC,cAAC,IAAD,CAAO5G,KAAI,UAAKA,EAAL,YAAX,SACE,cAAC,EAAD,CAAMgD,MAAOA,EAAMA,mBC3GhB4E,EAbE,WACf,IAAM9J,EAAUC,cAGhB,OAFA8J,YAAW,kBAAM/J,EAAQS,KAAK,YAAW,KAGvC,qBAAKC,UAAU,yDAAf,SACE,8BACE,4FCTFsJ,EAAyB,SAACC,GAC9BC,aAAaC,QAAQ,OAAQhD,KAAKC,UAAU6C,KAGjCG,EAA0B,WACrC,OAAOjD,KAAKkD,MAAMH,aAAaI,QAAQ,UAG5BC,GAAe,SAACC,EAAOC,GAAR,OAAoB,SAAC/K,EAAOE,GACtD,IAAMqK,EAAOO,EAAME,MAAK,SAACC,GAAD,OAAOA,EAAEjL,QAAUA,EAAMkL,UACjD,GAAIX,GACEA,EAAKrK,WAAaA,EAASgL,OAI7B,OAHAH,GAAQ,SAACR,GAAD,mBAAC,eAAeA,GAAhB,IAAsBvK,QAAOE,WAAUiL,WAAW,OAE1Db,EADa,CAAEtK,QAAOE,WAAUiL,WAAW,KAEpC,EAGX,OAAO,IAGIC,GAAc,SAACC,EAAKN,GAAN,OAAkB,SAACO,GAC5C,GAAIA,IAAaD,EAAK,CACpBN,GAAQ,SAACR,GAAD,mBAAC,eAAeA,GAAhB,IAAsBgB,UAAU,OACxC,IAAMhB,EAAOG,IACPc,EAAgB,2BAAQjB,GAAR,IAAcgB,UAAU,IAE9C,OADAjB,EAAuBkB,IAChB,EAET,OAAO,ICnBHC,GAAc,CAClBzL,MAAO,KACPE,SAAU,KACViL,WAAW,EACXE,IAAK,SACLE,UAAU,GAwCGG,GArCH,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UAAWb,EAAY,EAAZA,MAClBc,EAAWD,GAAaF,GADM,EAEZ1L,mBAAS6L,GAFG,mBAE7BrB,EAF6B,KAEvBQ,EAFuB,KAI9B1G,EAAS,WACb0G,EAAQU,IACRjB,aAAaqB,SAGf,OACE,cAAC,IAAD,UACGtB,EAAKgB,SACJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAO/I,KAAK,SAAZ,SACE,cAAC,EAAD,CAAO6B,OAAQA,MAEjB,cAAC,IAAD,CAAO7B,KAAK,IAAZ,SACE,cAAC,EAAD,SAIJ,eAAC,IAAD,WACE,cAAC,EAAD,CAAoBA,KAAK,SAAShD,UAAW+K,EAAKgB,SAAU9L,GAAI,IAAhE,SACE,cAAC,EAAD,CAAO4E,OAAQA,MAEjB,cAAC,EAAD,CAAoB7B,KAAK,OAAOhD,UAAW+K,EAAKY,UAAW1L,GAAI,IAA/D,SACE,cAAC,EAAD,CAAUK,QAASsL,GAAYb,EAAKc,IAAKN,OAE3C,cAAC,EAAD,CAAoBvI,KAAK,IAAIhD,WAAY+K,EAAKgB,SAAU9L,GAAI,SAA5D,SACE,cAAC,EAAD,CAAMK,QAAS+K,GAAaC,EAAOC,aCnChCe,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,SCERjB,GAAQ,CAAC,ICRb,WAAYyB,EAAUC,EAAMnB,GAAM,qBAChCoB,KAAKzM,MAAQuM,EACbE,KAAKvM,SAAWsM,EAChBC,KAAKpB,IAAMA,EDKA,CAAS,eAAgB,aAClCM,GAAYjB,IAElBgC,IAAS9M,OACP,cAAC,IAAM+M,WAAP,UACE,cAAC,GAAD,CAAKhB,UAAWA,GAAWb,MAAOA,OAEpC8B,SAASC,eAAe,SAM1Bf,O","file":"static/js/main.39318a99.chunk.js","sourcesContent":["import { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst RouteWithCondition = ({ condition, to, children, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        return condition ? children : <Redirect to={to} />;\n      }}\n    />\n  );\n};\n\nexport default RouteWithCondition;\n\nRouteWithCondition.propTypes = {\n  condition: PropTypes.bool.isRequired,\n  to: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Login = ({ isValid }) => {\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [invalidUser, setInvalidUser] = useState(false);\n\n  const history = useHistory();\n\n  const handleSumbit = (e) => {\n    e.preventDefault();\n    if (isValid(login, password)) {\n      setInvalidUser(false);\n      history.push('/otp');\n    }\n    setInvalidUser(true);\n  };\n\n  const handleChange = (setState) => (e) => {\n    setState(e.target.value);\n  };\n  return (\n    <form onSubmit={handleSumbit}>\n      <div className=\"mb-3\">\n        <label htmlFor=\"inputLogin\" className=\"form-label d-block mx-auto\">\n          Login\n          <input\n            name=\"login\"\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputLogin\"\n            aria-describedby=\"loginHelp\"\n            required\n            value={login}\n            onChange={handleChange(setLogin)}\n          />\n        </label>\n      </div>\n      <div className=\"mb-3\">\n        <label name=\"password\" htmlFor=\"inputPassword\" className=\"form-label d-block mx-auto\">\n          Password\n          <input\n            name=\"password\"\n            type=\"password\"\n            className=\"form-control\"\n            id=\"inputPassword\"\n            value={password}\n            required\n            onChange={handleChange(setPassword)}\n          />\n        </label>\n      </div>\n\n      <button type=\"submit\" className=\"btn btn-secondary d-block mx-auto\">\n        Sign In\n      </button>\n      {invalidUser && <p className=\"text-danger my-2\">Login or password is not valid</p>}\n    </form>\n  );\n};\n\nexport default Login;\n\nLogin.propsType = { isValid: PropTypes.func.isRequired };\n","import PropTypes from 'prop-types';\nimport LoginForm from '../components/LoginForm';\n\nconst Home = ({ isValid }) => {\n  return (\n    <div className=\"container h-100 d-flex justify-content-center align-items-center\">\n      <div className=\"d-flex\">\n        <LoginForm isValid={isValid} />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n\nHome.propTypes = {\n  isValid: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst OtpForm = ({ isValid }) => {\n  const [value, setValue] = useState('');\n  const [isValidOTP, setIsValidOTP] = useState(null);\n  const history = useHistory();\n\n  const handleChange = ({ target }) => {\n    setValue(target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isValid(value)) {\n      history.push('/cards');\n    }\n    setIsValidOTP('Code is not valid');\n  };\n\n  return (\n    <form className=\"h-100 d-flex flex-column justify-content-between\" onSubmit={handleSubmit}>\n      <div className=\"mb-3\">\n        <label htmlFor=\"inputOtp\" className=\"form-label\">\n          Code from SMS\n          <input\n            name=\"otp\"\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputOtp\"\n            value={value}\n            required\n            onChange={handleChange}\n          />\n          {isValidOTP && <p className=\"text-danger\">{isValidOTP}</p>}\n        </label>\n      </div>\n      <button type=\"submit\" className=\"btn btn-secondary d-block mx-auto\">\n        Continue\n      </button>\n    </form>\n  );\n};\n\nexport default OtpForm;\n\nOtpForm.propTypes = { isValid: PropTypes.func.isRequired };\n","import PropTypes from 'prop-types';\nimport OTPForm from '../components/OtpForm.js';\n\nconst CheckOTP = ({ isValid }) => {\n  return (\n    <div className=\"container h-100 d-flex justify-content-center align-items-center\">\n      <div className=\"p-3 bg-light\" style={{ height: '242px' }}>\n        <OTPForm isValid={isValid} />\n      </div>\n    </div>\n  );\n};\n\nexport default CheckOTP;\n\nCheckOTP.propTypes = {\n  isValid: PropTypes.func,\n};\n","const host = 'https://api.pokemontcg.io/';\nconst prefix = 'v1';\n\nconst routes = (path) => [host, prefix, path].join('/');\n\nexport default routes;\n","import routes from './routes';\n\nconst setSearchParams = (url, obj = {}) =>\n  Object.entries(obj).forEach(([key, value]) => url.searchParams.set(key, value));\n\nconst isObjWithKeys = (obj) => Object.keys(obj).length > 0;\n\nconst getPokemonsData = async (path, query = {}) => {\n  const route = routes(path);\n  const url = new URL(route);\n  if (isObjWithKeys(query)) {\n    setSearchParams(url, query);\n  }\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    const total = await response.headers.get('total-count');\n    return { data, total };\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\nexport default getPokemonsData;\n","import PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nconst NavBar = ({ isLinkBack, logout }) => {\n  const history = useHistory();\n\n  return (\n    <div style={{ backgroundColor: '#EBEBEB' }}>\n      <ul className=\"nav d-flex justify-content-between border\">\n        <li className=\"nav-item\">\n          {isLinkBack && (\n            <button\n              className=\"btn btn-link text-dark\"\n              onClick={() => history.goBack()}\n              style={{ borderStyle: 'none' }}\n            >\n              &lt; Back\n            </button>\n          )}\n        </li>\n        <li className=\"nav-item\">\n          <button className=\"btn btn-link text-dark\" onClick={() => logout()}>\n            Logout\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n};\nexport default NavBar;\n\nNavBar.propTypes = {\n  isLinkBack: PropTypes.bool,\n  logout: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Selector = ({ name, list, setValue, isLoading, query, setBeginPage }) => {\n  const defaultValue = query[name] || name;\n  const [value, setCurrentValue] = useState(defaultValue);\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setCurrentValue(e.target.value);\n    setValue(e.target);\n    setBeginPage();\n  };\n\n  return (\n    <select\n      name={name}\n      className=\"form-select  my-3 w-75\"\n      disabled={isLoading}\n      value={value}\n      onChange={handleChange}\n    >\n      <option value=\"\">{name}</option>\n      {list.map((type, i) => (\n        <option key={i} value={type}>\n          {type}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default Selector;\n\nSelector.propTypes = {\n  name: PropTypes.string.isRequired,\n  list: PropTypes.array.isRequired,\n  setValue: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import svg from '../logo.svg';\n\nconst Loader = () => {\n  return (\n    <div className=\" w-100 h-100 d-flex justify-content-center align-items-center\">\n      <img className=\"App-logo\" src={svg} alt=\"loading\" />\n    </div>\n  );\n};\n\nexport default Loader;\n","import PropTypes from 'prop-types';\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nconst CardsBox = ({ cards, showModal }) => {\n  const { url } = useRouteMatch();\n\n  return (\n    <div className=\"d-flex flex-wrap justify-content-center aligh-items-center overflow-auto\">\n      {cards &&\n        cards.map((card, i) => {\n          return (\n            <div className=\"card w-25 my-3 mx-4 shadow\" key={i}>\n              <img\n                src={card.imageUrl}\n                className=\"card-img-top\"\n                alt=\"...\"\n                onClick={showModal(card.name, card.imageUrlHiRes)}\n              />\n              <div className=\"card-body p-1 h-25\">\n                <Link to={{ pathname: `${url}/${card.id}`, state: card }}>{card.name}</Link>\n                <p className=\"card-text\">{card.artist}</p>\n              </div>\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default CardsBox;\n\nCardsBox.propTypes = {\n  cards: PropTypes.array.isRequired,\n  showModal: PropTypes.func.isRequired,\n};\n","const paginate = (page, pageSize, total) => {\n  const lastPage = Math.ceil(total / pageSize);\n  if (page > lastPage) {\n    return null;\n  }\n  const firstPage = 1;\n  const pageShow = 5;\n  const border = 2;\n  const separator = '...';\n  const pages = [];\n  if (pageShow >= lastPage) {\n    for (let i = firstPage; i <= lastPage; i++) {\n      pages.push(i);\n    }\n  } else {\n    if (page - firstPage <= border) {\n      for (let i = 1; i <= page + border; i++) {\n        pages.push(i);\n      }\n      pages.push(separator);\n      pages.push(lastPage);\n    } else if (lastPage - page <= border) {\n      pages.push(firstPage);\n      pages.push(separator);\n      for (let i = page - border; i <= lastPage; i++) {\n        pages.push(i);\n      }\n    } else {\n      pages.push(firstPage);\n      pages.push(separator);\n      for (let i = page - border; i <= page + border; i++) {\n        pages.push(i);\n      }\n      pages.push(separator);\n      pages.push(lastPage);\n    }\n  }\n  return pages;\n};\n\nexport default paginate;\n","import PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport paginate from '../utils/paginate';\n\nconst PaginateBox = ({ page, pageSize, total, setPage }) => {\n  if (total === 0) {\n    return null;\n  }\n  const pagesList = paginate(page, pageSize, total);\n  const handleClick = (currentPage) => () => {\n    setPage(currentPage);\n  };\n  return (\n    <div className=\"d-flex justify-content-center py-1\" style={{ backgroundColor: '#EBEBEB' }}>\n      <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination justify-content-center my-0\">\n          {pagesList &&\n            pagesList.map((p, i) => {\n              const btnClass = cn({\n                'btn text-dark mx-1': true,\n                'btn-active': page === p,\n              });\n              return (\n                <li key={i} className=\"page-item\">\n                  <button\n                    className={btnClass}\n                    style={{ backgroundColor: '#EBEBEB', borderStyle: 'none' }}\n                    onClick={handleClick(p)}\n                  >\n                    {p}\n                  </button>\n                </li>\n              );\n            })}\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default PaginateBox;\n\nPaginateBox.propTypes = {\n  page: PropTypes.number,\n  pageSize: PropTypes.number,\n  total: PropTypes.number,\n  setQuery: PropTypes.func,\n};\n","import React from 'react';\nimport { useLocation, Redirect } from 'react-router-dom';\n\nconst Card = () => {\n  const card = useLocation().state;\n  return (\n    <>\n      {card ? (\n        <div className=\"row my-2 d-flex flex-grow-1\">\n          <div className=\"col-md-6 \">\n            <div className=\"d-flex flex-column align-items-center h-100\">\n              <img src={card.imageUrlHiRes} alt={card.name} className=\"w-75 px-auto\" />\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className=\"p-2\">\n              <p>\n                <span>{`Name: `}</span>\n                <strong>{card.name}</strong>\n              </p>\n              {card.types && <p>{`Type: ${card.types} `}</p>}\n              <p>{`Subtype: ${card.subtype}`}</p>\n              <hr />\n              {card.attacks && <p>{`attackDamage: ${card.attacks[0].damage}`}</p>}\n              {card.attacks && <p>{`attackCost: ${card.attacks[0].cost[0]}`}</p>}\n              {card.resistances && <p>{`resistances: ${JSON.stringify(card.resistances[0])}`}</p>}\n              {card.evolvesFrom && <p>{`evolvesFrom: ${card.evolvesFrom}`}</p>}\n              {card.attacks &&\n                card.attacks.map((a, i) => (\n                  <div key={i}>\n                    <p className=\"mb-1\">{`Attack Name: ${a.name}`}</p>\n                    {a.text && <small>{`Description: ${a.text}`}</small>}\n                  </div>\n                ))}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <Redirect to=\"/cards\" />\n      )}\n    </>\n  );\n};\n\nexport default Card;\n","import { Button, Modal } from 'react-bootstrap';\n\nconst ModalWindow = ({ pokemon, closeModal }) => {\n  const handleClose = () => closeModal();\n  return (\n    <>\n      <Modal show={true} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{pokemon.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <img src={pokemon.img} alt=\"pokemon\" className=\"d-block w-75 mx-auto\"></img>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalWindow;\n","import { useState, useEffect } from 'react';\nimport getPokemonsData from '../API';\nimport { Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport NavBar from '../components/NavBar';\nimport Selector from '../components/Selector';\nimport Loader from '../components/Loader';\nimport CardsBox from '../components/CardsBox';\nimport PaginateBox from '../components/PaginateBox';\nimport Card from '../components/Card';\nimport Modal from '../components/Modal';\nimport '../App.css';\n\nconst defaultQuery = { types: '', subtype: '', page: 1, pageSize: 6 };\nconst cardsPath = 'cards';\nconst selectors = [\n  { path: 'types', name: 'types' },\n  { path: 'subtypes', name: 'subtype' },\n];\nconst defaultSelectorsState = selectors.reduce((acc, { path }) => ({ ...acc, [path]: [] }), {});\nconst defaultCards = { cards: [], total: 0 };\nconst defaultPokemon = { pokemon: { name: '', img: '' }, show: null };\nconst setCurrentPage = (setQuery) => (page) => setQuery((state) => ({ ...state, page }));\nconst setSelectorValue = (setQuery) => (target) =>\n  setQuery((state) => ({\n    ...state,\n    [target.name]: target.value,\n  }));\n\nconst Cards = ({ logout }) => {\n  const [query, setQuery] = useState(defaultQuery);\n  const [types, setTypes] = useState(defaultSelectorsState);\n  const [cards, setCards] = useState(defaultCards);\n  const [showModal, setShowModal] = useState(defaultPokemon);\n  const [isLoadingSelectors, setIsLoadingSelectors] = useState(false);\n  const [isLoadingCards, setIsLoadingCards] = useState(false);\n  const { path } = useRouteMatch();\n  const { pathname } = useLocation();\n  const setBeginPage = () => setQuery((state) => ({ ...state, page: 1 }));\n\n  useEffect(() => {\n    setIsLoadingSelectors(true);\n    const fetchSelectorsData = (list) => {\n      list.forEach(async ({ path }) => {\n        try {\n          const { data } = await getPokemonsData(path);\n          setTypes((state) => ({ ...state, [path]: data[path] }));\n          setIsLoadingSelectors(false);\n        } catch (err) {\n          alert(err);\n        }\n      });\n    };\n    fetchSelectorsData(selectors);\n  }, []);\n\n  useEffect(() => {\n    if (query.types === '' && query.subtype === '') {\n      setCards(defaultCards);\n      return;\n    }\n    setIsLoadingCards(true);\n    const fetchCardsData = async (path) => {\n      try {\n        const { data, total } = await getPokemonsData(path, query);\n        setCards({ cards: data.cards, total: Number(total) });\n        setIsLoadingCards(false);\n      } catch (err) {\n        alert(err);\n      }\n    };\n    fetchCardsData(cardsPath);\n  }, [query]);\n\n  return (\n    <div className=\"container h-100 d-flex flex-column \">\n      {showModal.show && (\n        <Modal pokemon={showModal.pokemon} closeModal={() => setShowModal(defaultPokemon)} />\n      )}\n      <NavBar isLinkBack={pathname !== '/cards'} logout={logout} />\n      <div className=\"row my-2 d-flex flex-grow-1\">\n        <Switch>\n          <Route exact path={path}>\n            <div className=\"col-md-3 d-flex\">\n              <div\n                className=\"border w-100 d-flex flex-column align-items-center\"\n                style={{ backgroundColor: '#FAFAFA' }}\n              >\n                {selectors.map(({ path, name }, i) => (\n                  <Selector\n                    key={i}\n                    name={name}\n                    setValue={setSelectorValue(setQuery)}\n                    list={types[path]}\n                    isLoading={isLoadingSelectors}\n                    query={query}\n                    setBeginPage={setBeginPage}\n                  />\n                ))}\n              </div>\n            </div>\n            <div className=\"col-md-9 flex-grow-1\">\n              <div className=\"border h-100 d-flex flex-column justify-content-between\">\n                {isLoadingCards || isLoadingSelectors ? (\n                  <Loader />\n                ) : (\n                  <CardsBox\n                    cards={cards.cards}\n                    showModal={(name, imgLink) => () =>\n                      setShowModal({ show: true, pokemon: { name, img: imgLink } })}\n                  />\n                )}\n                <PaginateBox\n                  page={query.page}\n                  pageSize={query.pageSize}\n                  total={cards.total}\n                  setPage={setCurrentPage(setQuery)}\n                />\n              </div>\n            </div>\n          </Route>\n          <Route path={`${path}/:cardId`}>\n            <Card cards={cards.cards} />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default Cards;\n\nCards.propTypes = {\n  logout: PropTypes.func.isRequired,\n};\n","import { useHistory } from 'react-router-dom';\n\nconst LoggedIn = () => {\n  const history = useHistory();\n  setTimeout(() => history.push('/cards'), 3000);\n\n  return (\n    <div className=\"h-100 d-flex justify-content-center align-items-center\">\n      <div>\n        <h2>You are already Logged In, redirecting to Cards Page!</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default LoggedIn;\n","const saveUSerToLocalStorage = (user) => {\n  localStorage.setItem('user', JSON.stringify(user));\n};\n\nexport const getUserFromLocalStorage = () => {\n  return JSON.parse(localStorage.getItem('user'));\n};\n\nexport const validateUser = (users, setUser) => (login, password) => {\n  const user = users.find((u) => u.login === login.trim());\n  if (user) {\n    if (user.password === password.trim()) {\n      setUser((user) => ({ ...user, login, password, passCheck: true }));\n      const user = { login, password, passCheck: true };\n      saveUSerToLocalStorage(user);\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const validateOtp = (otp, setUser) => (otpValue) => {\n  if (otpValue === otp) {\n    setUser((user) => ({ ...user, otpCheck: true }));\n    const user = getUserFromLocalStorage('user');\n    const userWithOtpCheck = { ...user, otpCheck: true };\n    saveUSerToLocalStorage(userWithOtpCheck);\n    return true;\n  }\n  return false;\n};\n","import { useState } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport RouteWithCondition from './components/RouteWithCondition';\nimport Home from './pages/Home';\nimport CheckOTP from './pages/CheckOTP';\nimport Cards from './pages/Cards';\nimport LoggedIn from './pages/LoggedIn';\nimport { validateUser, validateOtp } from './utils/validate';\nimport './App.css';\n\nconst defaultUser = {\n  login: null,\n  password: null,\n  passCheck: false,\n  otp: '123456',\n  otpCheck: false,\n};\n\nconst App = ({ savedUser, users }) => {\n  const initUSer = savedUser || defaultUser;\n  const [user, setUser] = useState(initUSer);\n\n  const logout = () => {\n    setUser(defaultUser);\n    localStorage.clear();\n  };\n\n  return (\n    <Router>\n      {user.otpCheck ? (\n        <Switch>\n          <Route path=\"/cards\">\n            <Cards logout={logout} />\n          </Route>\n          <Route path=\"*\">\n            <LoggedIn />\n          </Route>\n        </Switch>\n      ) : (\n        <Switch>\n          <RouteWithCondition path=\"/cards\" condition={user.otpCheck} to={'/'}>\n            <Cards logout={logout} />\n          </RouteWithCondition>\n          <RouteWithCondition path=\"/otp\" condition={user.passCheck} to={'/'}>\n            <CheckOTP isValid={validateOtp(user.otp, setUser)} />\n          </RouteWithCondition>\n          <RouteWithCondition path=\"/\" condition={!user.otpCheck} to={'/cards'}>\n            <Home isValid={validateUser(users, setUser)} />\n          </RouteWithCondition>\n        </Switch>\n      )}\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { getUserFromLocalStorage } from './utils/validate';\nimport User from './entities/User';\n\nconst users = [new User('kode@kode.ru', 'Enk0deng')];\nconst savedUser = getUserFromLocalStorage();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App savedUser={savedUser} users={users} />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","class User {\n  constructor(nickname, pass, otp) {\n    this.login = nickname;\n    this.password = pass;\n    this.otp = otp;\n  }\n}\n\nexport default User;\n"],"sourceRoot":""}